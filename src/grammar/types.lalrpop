
pub SimpleType: SimpleType = {
    <BaseType> => SimpleType::Base(<>),
    "*" => SimpleType::Star,
};

BaseType: BaseType = {
    "int" => BaseType::Int,
    "bool" => BaseType::Bool,
    "str" => BaseType::String,
};

pub PropertyType: PropertyType = {
    "{" "}" => PropertyType::Open(HashMap::new()),
    "{" <RecordElements> "}" => PropertyType::Open(<>),
    "{{" "}}" => PropertyType::Closed(HashMap::new()),
    "{{" <RecordElements> "}}" => PropertyType::Closed(<>),
};

RecordElements: HashMap<String, SimpleType> = {
    <elem:RecordElement> => {
        let mut map = HashMap::new();
        map.insert(elem.0, elem.1);
        map
    },
    <mut map:RecordElements> "," <elem:RecordElement> => {
        map.insert(elem.0, elem.1);
        map
    },
};

RecordElement: (String, SimpleType) = {
    <Name> ":" <SimpleType> => (<>),
};

